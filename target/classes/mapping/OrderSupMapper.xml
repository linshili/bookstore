<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nsc.backend.mapper.OrderSupMapper">
  <resultMap id="BaseResultMap" type="com.nsc.backend.entity.OrderSup">
    <id column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="order_number" jdbcType="VARCHAR" property="orderNumber" />
    <result column="order_time" jdbcType="TIMESTAMP" property="orderTime" />
    <result column="order_payTime" jdbcType="TIMESTAMP" property="orderPayTime" />
    <result column="order_endTime" jdbcType="TIMESTAMP" property="orderEndTime" />
    <result column="order_totalAcount" jdbcType="DECIMAL" property="orderTotalAcount" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="tradeTable_method" jdbcType="INTEGER" property="tradeTableMethod" />
    <result column="tradeTable_number" jdbcType="VARCHAR" property="tradeTableNumber" />
    <result column="add_id" jdbcType="INTEGER" property="addId" />
    <result column="order_ispay" jdbcType="INTEGER" property="orderIspay" />
    <result column="order_isequal" jdbcType="INTEGER" property="orderIsequal" />
    <result column="order_isvalid" jdbcType="INTEGER" property="orderIsvalid" />
    <result column="order_note" jdbcType="VARCHAR" property="orderNote" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    order_id, order_number, order_time, order_payTime, order_endTime, order_totalAcount, 
    user_id, tradeTable_method, tradeTable_number, add_id, order_ispay, order_isequal, 
    order_isvalid,,order_note
  </sql>
  <select id="selectByExample" parameterType="com.nsc.backend.entity.OrderSupExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_base
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_base
    where order_id = #{orderId,jdbcType=INTEGER}
  </select>
  
  <select id="selectByNum" parameterType="java.lang.String" resultType="java.lang.Integer" >
  	select order_base.order_id from order_base where order_number = #{orderNum}
  </select>
  
  <select id="getTotalAcount" parameterType="java.lang.String" resultType="java.math.BigDecimal" >
  	select order_base.order_totalAcount from order_base where order_number = #{orderNum}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from order_base
    where order_id = #{orderId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.nsc.backend.entity.OrderSupExample">
    delete from order_base
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nsc.backend.entity.OrderSup">
    insert into order_base (order_id, order_number, order_time, 
      order_payTime, order_endTime, order_totalAcount, 
      user_id, tradeTable_method, tradeTable_number, 
      add_id, order_ispay, order_isequal, 
      order_isvalid,,order_note)
    values (#{orderId,jdbcType=INTEGER}, #{orderNumber,jdbcType=VARCHAR}, #{orderTime,jdbcType=TIMESTAMP}, 
      #{orderPayTime,jdbcType=TIMESTAMP}, #{orderEndTime,jdbcType=TIMESTAMP}, #{orderTotalAcount,jdbcType=DECIMAL}, 
      #{userId,jdbcType=INTEGER}, #{tradeTableMethod,jdbcType=INTEGER}, #{tradeTableNumber,jdbcType=VARCHAR}, 
      #{addId,jdbcType=INTEGER}, #{orderIspay,jdbcType=INTEGER}, #{orderIsequal,jdbcType=INTEGER}, 
      #{orderIsvalid,jdbcType=INTEGER}, #{orderNote,jdbcType=VARCHAR} )
  </insert>
  <insert id="insertSelective" parameterType="com.nsc.backend.entity.OrderSup">
    insert into order_base
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="orderNumber != null">
        order_number,
      </if>
      <if test="orderTime != null">
        order_time,
      </if>
      <if test="orderPayTime != null">
        order_payTime,
      </if>
      <if test="orderEndTime != null">
        order_endTime,
      </if>
      <if test="orderTotalAcount != null">
        order_totalAcount,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="tradeTableMethod != null">
        tradeTable_method,
      </if>
      <if test="tradeTableNumber != null">
        tradeTable_number,
      </if>
      <if test="addId != null">
        add_id,
      </if>
      <if test="orderIspay != null">
        order_ispay,
      </if>
      <if test="orderIsequal != null">
        order_isequal,
      </if>
      <if test="orderIsvalid != null">
        order_isvalid,
      </if>
      <if test="orderNote != null">
        order_note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="orderNumber != null">
        #{orderNumber,jdbcType=VARCHAR},
      </if>
      <if test="orderTime != null">
        #{orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderPayTime != null">
        #{orderPayTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderEndTime != null">
        #{orderEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderTotalAcount != null">
        #{orderTotalAcount,jdbcType=DECIMAL},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="tradeTableMethod != null">
        #{tradeTableMethod,jdbcType=INTEGER},
      </if>
      <if test="tradeTableNumber != null">
        #{tradeTableNumber,jdbcType=VARCHAR},
      </if>
      <if test="addId != null">
        #{addId,jdbcType=INTEGER},
      </if>
      <if test="orderIspay != null">
        #{orderIspay,jdbcType=INTEGER},
      </if>
      <if test="orderIsequal != null">
        #{orderIsequal,jdbcType=INTEGER},
      </if>
      <if test="orderIsvalid != null">
        #{orderIsvalid,jdbcType=INTEGER},
      </if>
      <if test="orderNote != null">
        #{orderNote,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nsc.backend.entity.OrderSupExample" resultType="java.lang.Long">
    select count(*) from order_base
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <!-- 微信返回数据时与系统后台数据作比较，金额不相等时把 order_isequal设为0-->
  <update id="setorderIsequal" parameterType="String">
  	update order_base
  	 	set order_isequal=1
  	 	where order_number = #{orderNum}
  </update>
  
    <!-- 通过主订单编号更新主订单信息(支付时间，交易单号) -->
  <update id="updateOrderBasePayTime"  >
  	update order_base
  		set order_payTime = #{payTime},
  		tradeTable_number = #{tMerchantnumber},
  		order_note = #{orderNote},
  		order_ispay = 1
  	where order_number = #{orderNum}
  </update>
  
  <update id="updateByExampleSelective" parameterType="map">
    update order_base
    <set>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.orderNumber != null">
        order_number = #{record.orderNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.orderTime != null">
        order_time = #{record.orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderPayTime != null">
        order_payTime = #{record.orderPayTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderEndTime != null">
        order_endTime = #{record.orderEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderTotalAcount != null">
        order_totalAcount = #{record.orderTotalAcount,jdbcType=DECIMAL},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.tradeTableMethod != null">
        tradeTable_method = #{record.tradeTableMethod,jdbcType=INTEGER},
      </if>
      <if test="record.tradeTableNumber != null">
        tradeTable_number = #{record.tradeTableNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.addId != null">
        add_id = #{record.addId,jdbcType=INTEGER},
      </if>
      <if test="record.orderIspay != null">
        order_ispay = #{record.orderIspay,jdbcType=INTEGER},
      </if>
      <if test="record.orderIsequal != null">
        order_isequal = #{record.orderIsequal,jdbcType=INTEGER},
      </if>
      <if test="record.orderIsvalid != null">
        order_isvalid = #{record.orderIsvalid,jdbcType=INTEGER},
      </if>
       <if test="record.orderNote != null">
        order_note = #{record.orderNote,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update order_base
    set order_id = #{record.orderId,jdbcType=INTEGER},
      order_number = #{record.orderNumber,jdbcType=VARCHAR},
      order_time = #{record.orderTime,jdbcType=TIMESTAMP},
      order_payTime = #{record.orderPayTime,jdbcType=TIMESTAMP},
      order_endTime = #{record.orderEndTime,jdbcType=TIMESTAMP},
      order_totalAcount = #{record.orderTotalAcount,jdbcType=DECIMAL},
      user_id = #{record.userId,jdbcType=INTEGER},
      tradeTable_method = #{record.tradeTableMethod,jdbcType=INTEGER},
      tradeTable_number = #{record.tradeTableNumber,jdbcType=VARCHAR},
      add_id = #{record.addId,jdbcType=INTEGER},
      order_ispay = #{record.orderIspay,jdbcType=INTEGER},
      order_isequal = #{record.orderIsequal,jdbcType=INTEGER},
      order_isvalid = #{record.orderIsvalid,jdbcType=INTEGER},
       order_note = #{record.orderNote,jdbcType=INTEGER},
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.nsc.backend.entity.OrderSup">
    update order_base
    <set>
      <if test="orderNumber != null">
        order_number = #{orderNumber,jdbcType=VARCHAR},
      </if>
      <if test="orderTime != null">
        order_time = #{orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderPayTime != null">
        order_payTime = #{orderPayTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderEndTime != null">
        order_endTime = #{orderEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderTotalAcount != null">
        order_totalAcount = #{orderTotalAcount,jdbcType=DECIMAL},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="tradeTableMethod != null">
        tradeTable_method = #{tradeTableMethod,jdbcType=INTEGER},
      </if>
      <if test="tradeTableNumber != null">
        tradeTable_number = #{tradeTableNumber,jdbcType=VARCHAR},
      </if>
      <if test="addId != null">
        add_id = #{addId,jdbcType=INTEGER},
      </if>
      <if test="orderIspay != null">
        order_ispay = #{orderIspay,jdbcType=INTEGER},
      </if>
      <if test="orderIsequal != null">
        order_isequal = #{orderIsequal,jdbcType=INTEGER},
      </if>
      <if test="orderIsvalid != null">
        order_isvalid = #{orderIsvalid,jdbcType=INTEGER},
      </if>
      <if test="orderNote != null">
        order_note = #{orderNote,jdbcType=INTEGER},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nsc.backend.entity.OrderSup">
    update order_base
    set order_number = #{orderNumber,jdbcType=VARCHAR},
      order_time = #{orderTime,jdbcType=TIMESTAMP},
      order_payTime = #{orderPayTime,jdbcType=TIMESTAMP},
      order_endTime = #{orderEndTime,jdbcType=TIMESTAMP},
      order_totalAcount = #{orderTotalAcount,jdbcType=DECIMAL},
      user_id = #{userId,jdbcType=INTEGER},
      tradeTable_method = #{tradeTableMethod,jdbcType=INTEGER},
      tradeTable_number = #{tradeTableNumber,jdbcType=VARCHAR},
      add_id = #{addId,jdbcType=INTEGER},
      order_ispay = #{orderIspay,jdbcType=INTEGER},
      order_isequal = #{orderIsequal,jdbcType=INTEGER},
      order_isvalid = #{orderIsvalid,jdbcType=INTEGER},
      order_note = #{orderNote,jdbcType=INTEGER}
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
</mapper>